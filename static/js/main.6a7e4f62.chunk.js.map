{"version":3,"sources":["store/actions/userActions.js","store/reducers/userReducer.js","store/reducers/rootReducer.js","store/store.js","pages/HomePage.js","components/Product.js","store/allCoursesList.js","pages/ProductListPage.js","pages/LoginPage.js","pages/RegistrationPage.js","components/UserProduct.js","pages/UserPanelPage.js","components/ShoppingCartProduct.js","pages/ShoppingCartPage.js","pages/TransactionFormPage.js","store/pageList.js","pages/ErrorPage.js","layouts/Page.js","layouts/Navigation.js","layouts/LoginPanel.js","layouts/App.js","index.js"],"names":["ADD_USER","CHANGE_LOGIN_STATUS","BUY_COURSE","ADD_COURSE_TO_SHOPPING_CART","REMOVE_COURSE_FROM_SHOPPING_CART","changeLoginStatus","id","logged","type","payload","state","action","map","currentStateElement","login","password","purchasedCourses","shoppingCart","buyCourse","loggedUser","find","user","checkIfTheCourseAlreadyThere","courseId","addCourseToShoppingCart","removeCourseFromShoppingCart","newShoppingCart","filter","item","rootReducer","combineReducers","users","uuid","console","warn","store","createStore","HomePage","Product","title","img","price","authors","useSelector","dispatch","useDispatch","className","src","alt","checkIfTheCourseInCart","checkIfTheCourseIsBought","onClick","render","allCoursesList","ProductListPage","productsList","LoginPage","history","useHistory","validationData","useState","errorActive","setErrorActive","loginPanel","initialValues","formLogin","formPassword","validate","values","errors","length","validateForm","onSubmit","setSubmitting","resetForm","userLoginData","returnTheUserIfTheExists","push","undefined","log","submit","handleSubmit","name","component","placeholder","RegistrationPage","registrationSuccessful","addUser","alert","validation","UserProduct","UserPanelPage","loggedUserCourses","mainPage","course","purchasedCourseId","ShoppingCartProduct","ShoppingCartPage","coursesInShoppingCart","item2","TransactionFormPage","coursesToBuy","coursesToBuyId","shoppingCartCourseId","list","path","exact","Page","pages","key","menu","to","Navigation","document","querySelector","classList","toggle","LoginPanel","userLogged","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a7e4f62.chunk.js","sourcesContent":["import { v4 as uuid } from 'uuid';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const CHANGE_LOGIN_STATUS =\r\n  'CHANGE_LOGIN_STATUS';\r\nexport const BUY_COURSE = 'BUY_COURSE';\r\nexport const ADD_COURSE_TO_SHOPPING_CART =\r\n  'ADD_COURSE_TO_SHOPPING_CART';\r\nexport const REMOVE_COURSE_FROM_SHOPPING_CART =\r\n  'REMOVE_COURSE_FROM_SHOPPING_CART';\r\n\r\nexport const addUser = ({\r\n  id = uuid(),\r\n  login,\r\n  password,\r\n  purchasedCourses = [],\r\n  shoppingCart = [],\r\n  logged = false,\r\n}) => ({\r\n  type: ADD_USER,\r\n  payload: {\r\n    id,\r\n    login,\r\n    password,\r\n    purchasedCourses,\r\n    shoppingCart,\r\n    logged,\r\n  },\r\n});\r\n\r\nexport const changeLoginStatus = (\r\n  id,\r\n  logged\r\n) => ({\r\n  type: CHANGE_LOGIN_STATUS,\r\n  payload: { id, logged },\r\n});\r\n\r\nexport const buyCourse = courseId => ({\r\n  type: BUY_COURSE,\r\n  payload: courseId,\r\n});\r\n\r\nexport const addCourseToShoppingCart =\r\n  courseId => ({\r\n    type: ADD_COURSE_TO_SHOPPING_CART,\r\n    payload: courseId,\r\n  });\r\n\r\nexport const removeCourseFromShoppingCart =\r\n  courseId => ({\r\n    type: REMOVE_COURSE_FROM_SHOPPING_CART,\r\n    payload: courseId,\r\n  });\r\n","import {\r\n  ADD_USER,\r\n  CHANGE_LOGIN_STATUS,\r\n  BUY_COURSE,\r\n  ADD_COURSE_TO_SHOPPING_CART,\r\n  REMOVE_COURSE_FROM_SHOPPING_CART,\r\n} from '../actions/userActions.js';\r\n\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst changeLoginStatus = (state, action) => {\r\n  return state.map(currentStateElement => {\r\n    if (\r\n      currentStateElement.id !== action.payload.id\r\n    ) {\r\n      currentStateElement.logged = false;\r\n      return currentStateElement;\r\n    }\r\n\r\n    const { logged } = action.payload;\r\n\r\n    const {\r\n      id,\r\n      login,\r\n      password,\r\n      purchasedCourses,\r\n      shoppingCart,\r\n    } = currentStateElement;\r\n    return {\r\n      id,\r\n      login,\r\n      password,\r\n      purchasedCourses,\r\n      shoppingCart,\r\n      logged,\r\n    };\r\n  });\r\n};\r\n\r\nconst buyCourse = (state, action) => {\r\n  const loggedUser = state.find(\r\n    user => user.logged === true\r\n  );\r\n  const checkIfTheCourseAlreadyThere =\r\n    loggedUser.purchasedCourses.find(\r\n      courseId => courseId === action.payload\r\n    );\r\n\r\n  return state.map(currentStateElement => {\r\n    if (\r\n      currentStateElement.id !== loggedUser.id ||\r\n      checkIfTheCourseAlreadyThere\r\n    ) {\r\n      return currentStateElement;\r\n    }\r\n\r\n    const { id, login, password, logged } =\r\n      currentStateElement;\r\n    return {\r\n      id,\r\n      login,\r\n      password,\r\n      shoppingCart: [],\r\n      purchasedCourses: [\r\n        ...loggedUser.purchasedCourses,\r\n        ...action.payload,\r\n      ],\r\n      logged,\r\n    };\r\n  });\r\n};\r\n\r\nconst addCourseToShoppingCart = (\r\n  state,\r\n  action\r\n) => {\r\n  const loggedUser = state.find(\r\n    user => user.logged === true\r\n  );\r\n  const checkIfTheCourseAlreadyThere =\r\n    loggedUser.shoppingCart.find(\r\n      courseId => courseId === action.payload\r\n    );\r\n\r\n  return state.map(currentStateElement => {\r\n    if (\r\n      currentStateElement.id !== loggedUser.id ||\r\n      checkIfTheCourseAlreadyThere\r\n    ) {\r\n      return currentStateElement;\r\n    }\r\n\r\n    const {\r\n      id,\r\n      login,\r\n      password,\r\n      logged,\r\n      purchasedCourses,\r\n    } = currentStateElement;\r\n    return {\r\n      id,\r\n      login,\r\n      password,\r\n      purchasedCourses,\r\n      shoppingCart: [\r\n        ...loggedUser.shoppingCart,\r\n        action.payload,\r\n      ],\r\n      logged,\r\n    };\r\n  });\r\n};\r\n\r\nconst removeCourseFromShoppingCart = (\r\n  state,\r\n  action\r\n) => {\r\n  const loggedUser = state.find(\r\n    user => user.logged === true\r\n  );\r\n  //   const checkIfTheCourseAlreadyThere =\r\n  //     loggedUser.shoppingCart.find(\r\n  //       courseId => courseId === action.payload\r\n  //     );\r\n\r\n  const newShoppingCart =\r\n    loggedUser.shoppingCart.filter(\r\n      item => item !== action.payload\r\n    );\r\n\r\n  return state.map(currentStateElement => {\r\n    if (\r\n      currentStateElement.id !== loggedUser.id\r\n    ) {\r\n      return currentStateElement;\r\n    }\r\n\r\n    const {\r\n      id,\r\n      login,\r\n      password,\r\n      logged,\r\n      purchasedCourses,\r\n    } = currentStateElement;\r\n    return {\r\n      id,\r\n      login,\r\n      password,\r\n      purchasedCourses,\r\n      shoppingCart: [...newShoppingCart],\r\n      logged,\r\n    };\r\n  });\r\n};\r\n\r\nexport const userReducer = (\r\n  state = [\r\n    {\r\n      id: uuid(),\r\n      login: 'admin',\r\n      password: 'admin',\r\n      purchasedCourses: [],\r\n      shoppingCart: [],\r\n      logged: false,\r\n    },\r\n  ],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n      return [...state, action.payload];\r\n    case CHANGE_LOGIN_STATUS:\r\n      return changeLoginStatus(state, action);\r\n    case BUY_COURSE:\r\n      return buyCourse(state, action);\r\n    case ADD_COURSE_TO_SHOPPING_CART:\r\n      return addCourseToShoppingCart(\r\n        state,\r\n        action\r\n      );\r\n    case REMOVE_COURSE_FROM_SHOPPING_CART:\r\n      return removeCourseFromShoppingCart(\r\n        state,\r\n        action\r\n      );\r\n    default:\r\n      console.warn(\r\n        `Nie mamy akcji typu ${action.type}`\r\n      );\r\n\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\n\nimport { userReducer } from './userReducer';\n\nexport const rootReducer = combineReducers({\n  users: userReducer,\n});\n","import { createStore } from 'redux';\n\nimport { rootReducer } from './reducers/rootReducer';\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\r\n\r\nimport '../styles/HomePage.css';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Hello! My name is Marcin. I started\r\n        learning front-end in January 2019 with\r\n        HTML and CSS. This project is my most\r\n        extensive project, it shows what I have\r\n        learned so far. The project is being\r\n        developed, Currently, I am not focusing on\r\n        the appearance but on the functionalities.\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nimport '../styles/Product.scss';\r\n\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n} from 'react-redux';\r\n\r\nimport { addCourseToShoppingCart } from '../store/actions/userActions';\r\n\r\nconst Product = ({\r\n  title,\r\n  img,\r\n  price,\r\n  authors,\r\n  id,\r\n}) => {\r\n  const users = useSelector(store => store.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const render = () => {\r\n    const loggedUser = users.find(\r\n      user => user.logged === true\r\n    );\r\n\r\n    if (loggedUser) {\r\n      const checkIfTheCourseInCart =\r\n        loggedUser.shoppingCart.find(\r\n          courseId => courseId === id\r\n        );\r\n      const checkIfTheCourseIsBought =\r\n        loggedUser.purchasedCourses.find(\r\n          courseId => courseId === id\r\n        );\r\n      if (checkIfTheCourseInCart) {\r\n        return 'The course has been added to the cart';\r\n      } else if (checkIfTheCourseIsBought) {\r\n        return 'You already have this course';\r\n      } else\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              dispatch(\r\n                addCourseToShoppingCart(id)\r\n              );\r\n            }}\r\n          >\r\n            <span>\r\n              Add the product to your cart\r\n            </span>\r\n          </button>\r\n        );\r\n    } else\r\n      return 'Log in if you want to buy a course';\r\n  };\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product__video\"></div>\r\n      <div className=\"product__title\">\r\n        <span>{title}</span>\r\n      </div>\r\n      <div className=\"product__img\">\r\n        <img src={img} alt=\"product \" />\r\n      </div>\r\n      <div className=\"product__price\">\r\n        <span>Price: </span>\r\n        <span>{price}</span>\r\n      </div>\r\n      <div className=\"product__author\">\r\n        <span>Authors: </span>\r\n        <span>{authors}</span>\r\n      </div>\r\n\r\n      {render()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nconst allCoursesList = [\r\n  {\r\n    authors: ['Marcin 1'],\r\n    id: uuid(),\r\n    img: 'https://dummyimage.com/200x200/000/fff.jpg&text=cours',\r\n    price: 19.99,\r\n    title: 'Kurs 1',\r\n  },\r\n  {\r\n    authors: ['Marcin 2'],\r\n    id: uuid(),\r\n    img: 'https://dummyimage.com/200x200/000/fff.jpg&text=cours',\r\n    price: 29.99,\r\n    title: 'Kurs 2',\r\n  },\r\n  {\r\n    authors: ['Marcin 3'],\r\n    id: uuid(),\r\n    img: 'https://dummyimage.com/200x200/000/fff.jpg&text=cours',\r\n    price: 39.99,\r\n    title: 'Kurs 3',\r\n  },\r\n  {\r\n    authors: ['Marcin 4'],\r\n    id: uuid(),\r\n    img: 'https://dummyimage.com/200x200/000/fff.jpg&text=cours',\r\n    price: 49.99,\r\n    title: 'Kurs 4',\r\n  },\r\n  {\r\n    authors: ['Marcin 5'],\r\n    id: uuid(),\r\n    img: 'https://dummyimage.com/200x200/000/fff.jpg&text=cours',\r\n    price: 59.99,\r\n    title: 'Kurs 5',\r\n  },\r\n];\r\nexport default allCoursesList;\r\n","import React from 'react';\r\nimport '../styles/ProductListPage.scss';\r\n\r\nimport Product from '../components/Product';\r\n\r\nimport allCoursesList from '../store/allCoursesList';\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n} from 'react-redux';\r\n\r\nconst ProductListPage = () => {\r\n  const users = useSelector(store => store.users);\r\n\r\n  const productsList = allCoursesList.map(\r\n    ({ authors, img, price, title, id }) => (\r\n      <Product\r\n        key={id}\r\n        id={id}\r\n        authors={authors}\r\n        img={img}\r\n        title={title}\r\n        price={price}\r\n      />\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div className=\"productsList\">\r\n      {productsList}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;\r\n","import React, {\r\n  useState,\r\n  //   useEffect,\r\n} from 'react';\r\nimport {\r\n  Formik,\r\n  Field,\r\n  ErrorMessage,\r\n} from 'formik';\r\n\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n} from 'react-redux';\r\n\r\nimport { changeLoginStatus } from '../store/actions/userActions';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport '../styles/LoginPage.scss';\r\n\r\nfunction LoginPage() {\r\n  const users = useSelector(store => store.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  //   const isLogged = users.filter(\r\n  //     ({ logged }) => logged === true\r\n  //   );\r\n\r\n  const validationData = {\r\n    loggedUser: '',\r\n    login: '',\r\n  };\r\n\r\n  const [errorActive, setErrorActive] =\r\n    useState(false);\r\n\r\n  const submit = userLoginData => {\r\n    const { formLogin, formPassword } =\r\n      userLoginData;\r\n\r\n    const returnTheUserIfTheExists = users.find(\r\n      ({ login, password }) =>\r\n        login === formLogin &&\r\n        password === formPassword\r\n    );\r\n\r\n    if (\r\n      userLoginData &&\r\n      returnTheUserIfTheExists\r\n    ) {\r\n      returnTheUserIfTheExists.logged = true;\r\n      validationData.login = 'successful';\r\n      validationData.loggedUser =\r\n        returnTheUserIfTheExists;\r\n      dispatch(\r\n        changeLoginStatus(\r\n          validationData.loggedUser.id,\r\n          validationData.loggedUser.logged\r\n        )\r\n      );\r\n      history.push('/user_panel');\r\n    } else if (\r\n      userLoginData &&\r\n      returnTheUserIfTheExists === undefined\r\n    ) {\r\n      validationData.login = 'failed';\r\n      validationData.loggedUser =\r\n        returnTheUserIfTheExists;\r\n      setErrorActive(true);\r\n    } else return console.log('empty execution');\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     if (isLogged.length > 0) {\r\n  //       history.push('/user_panel');\r\n  //     }\r\n  //   }, []);\r\n\r\n  const validateForm = values => {\r\n    const errors = {};\r\n\r\n    if (values.formLogin.length < 3) {\r\n      errors.formLogin =\r\n        'Enter login (minimum 3 characters)';\r\n    } else if (values.formPassword.length < 4) {\r\n      errors.formPassword =\r\n        'Enter password (minimum 4 characters)';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const loginPanel = (\r\n    <Formik\r\n      initialValues={{\r\n        formLogin: '',\r\n        formPassword: '',\r\n      }}\r\n      validate={values => validateForm(values)}\r\n      onSubmit={(\r\n        values,\r\n        { setSubmitting, resetForm }\r\n      ) => {\r\n        submit(values);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"login\">\r\n            {errorActive ? (\r\n              <div>\r\n                The wrong username or password was\r\n                entered\r\n              </div>\r\n            ) : null}\r\n\r\n            <div>\r\n              <ErrorMessage\r\n                name=\"newError\"\r\n                component=\"div\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <ErrorMessage\r\n                name=\"formLogin\"\r\n                component=\"div\"\r\n              />\r\n            </div>\r\n\r\n            <span>Login</span>\r\n            <Field\r\n              name=\"formLogin\"\r\n              placeholder=\"login\"\r\n            />\r\n          </div>\r\n          <div className=\"password\">\r\n            <ErrorMessage\r\n              name=\"formPassword\"\r\n              component=\"div\"\r\n            />\r\n            <span>Password</span>\r\n            <Field\r\n              placeholder=\"password\"\r\n              name=\"formPassword\"\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n  return <>{loginPanel}</>;\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\n\r\nimport {\r\n  useDispatch,\r\n  useSelector,\r\n} from 'react-redux';\r\n\r\nimport { addUser } from '../store/actions/userActions';\r\n\r\nimport {\r\n  Formik,\r\n  Field,\r\n  ErrorMessage,\r\n} from 'formik';\r\n\r\nimport '../styles/RegistrationPage.scss';\r\n\r\nfunction RegistrationPage() {\r\n  const users = useSelector(store => store.users);\r\n\r\n  const dispatch = useDispatch();\r\n  const registrationSuccessful = values => {\r\n    dispatch(addUser(values));\r\n    alert(\r\n      `Congratulations! An account has been created, your login is: ${values.login}, remember your password and never give it to anyone!`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        login: '',\r\n        password: '',\r\n      }}\r\n      validate={values => {\r\n        const errors = {};\r\n        const validation = users.filter(\r\n          item => item.login === values.login\r\n        );\r\n\r\n        if (values.login.length < 3) {\r\n          errors.login =\r\n            'Enter login (minimum 3 characters)';\r\n        } else if (values.password.length < 4) {\r\n          errors.password =\r\n            'Enter password (minimum 4 characters)';\r\n        } else if (validation.length) {\r\n          errors.login = 'Username is taken';\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(\r\n        values,\r\n        { setSubmitting, resetForm }\r\n      ) => {\r\n        registrationSuccessful(values);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"login\">\r\n            <ErrorMessage\r\n              name=\"login\"\r\n              component=\"div\"\r\n            />\r\n            <span>Login</span>\r\n            <Field\r\n              name=\"login\"\r\n              placeholder=\"login\"\r\n            />\r\n          </div>\r\n          <div className=\"password\">\r\n            <ErrorMessage\r\n              name=\"password\"\r\n              component=\"div\"\r\n            />\r\n            <span>Password</span>\r\n            <Field\r\n              placeholder=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;\r\n","import React from 'react';\r\n\r\nimport '../styles/Product.scss';\r\n\r\nconst UserProduct = ({\r\n  title,\r\n  img,\r\n  price,\r\n  authors,\r\n  id,\r\n}) => {\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product__title\">\r\n        <span>{title}</span>\r\n      </div>\r\n      <div className=\"product__img\">\r\n        <img src={img} alt=\"product \" />\r\n      </div>\r\n      <div className=\"product__price\">\r\n        <span>Price: </span>\r\n        <span>{price}</span>\r\n      </div>\r\n      <div className=\"product__author\">\r\n        <span>Authors: </span>\r\n        <span>{authors}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProduct;\r\n","import React from 'react';\r\nimport UserProduct from '../components/UserProduct';\r\n\r\nimport '../styles/UserPanelPage.scss';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport allCoursesList from '../store/allCoursesList';\r\n\r\nconst UserPanelPage = () => {\r\n  const users = useSelector(store => store.users);\r\n\r\n  const loggedUser = users.find(\r\n    user => user.logged === true\r\n  );\r\n\r\n  let loggedUserCourses = null;\r\n\r\n  let mainPage = 'Log in to view your courses';\r\n\r\n  if (loggedUser) {\r\n    loggedUserCourses = allCoursesList.filter(\r\n      course =>\r\n        loggedUser.purchasedCourses.find(\r\n          purchasedCourseId =>\r\n            purchasedCourseId === course.id\r\n        )\r\n    );\r\n\r\n    const render = loggedUserCourses.map(\r\n      ({ authors, img, price, title, id }) => (\r\n        <UserProduct\r\n          key={id}\r\n          id={id}\r\n          authors={authors}\r\n          img={img}\r\n          title={title}\r\n          price={price}\r\n        />\r\n      )\r\n    );\r\n\r\n    mainPage =\r\n      loggedUserCourses.length > 0\r\n        ? render\r\n        : `You are logged in as ${loggedUser.login}  but you don't have any courses`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"userPanel_productList\">\r\n        {mainPage}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPanelPage;\r\n","import React from 'react';\r\n\r\nimport '../styles/Product.scss';\r\n\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n} from 'react-redux';\r\n\r\nimport { removeCourseFromShoppingCart } from '../store/actions/userActions';\r\n\r\nconst ShoppingCartProduct = ({\r\n  title,\r\n  img,\r\n  price,\r\n  authors,\r\n  id,\r\n}) => {\r\n  const users = useSelector(store => store.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const loggedUser = users.find(\r\n    user => user.logged === true\r\n  );\r\n  let checkIfTheCourseInCart = null;\r\n\r\n  //   if (loggedUser) {\r\n  //     checkIfTheCourseInCart =\r\n  //       loggedUser.shoppingCart.find(\r\n  //         courseId => courseId === id\r\n  //       );\r\n  //   }\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product__video\"></div>\r\n      <div className=\"product__title\">\r\n        <span>{title}</span>\r\n      </div>\r\n      <div className=\"product__img\">\r\n        <img src={img} alt=\"product \" />\r\n      </div>\r\n      <div className=\"product__price\">\r\n        <span>Price: </span>\r\n        <span>{price}</span>\r\n      </div>\r\n      <div className=\"product__author\">\r\n        <span>Authors: </span>\r\n        <span>{authors}</span>\r\n      </div>\r\n\r\n      {loggedUser ? (\r\n        checkIfTheCourseInCart ? (\r\n          'The course has been added to the cart'\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              dispatch(\r\n                removeCourseFromShoppingCart(id)\r\n              );\r\n            }}\r\n          >\r\n            <span>Remove from cart</span>\r\n          </button>\r\n        )\r\n      ) : (\r\n        'Log in if you want to buy a course'\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartProduct;\r\n","import React from 'react';\r\n\r\nimport '../styles/ShoppingCartPage.scss';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport allCoursesList from '../store/allCoursesList.js';\r\n\r\nimport ShoppingCartProduct from '../components/ShoppingCartProduct';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ShoppingCartPage = () => {\r\n  const users = useSelector(store => store.users);\r\n  const history = useHistory();\r\n\r\n  const render = () => {\r\n    const loggedUser = users.find(\r\n      user => user.logged === true\r\n    );\r\n\r\n    let coursesInShoppingCart = [];\r\n\r\n    if (loggedUser) {\r\n      coursesInShoppingCart =\r\n        allCoursesList.filter(item =>\r\n          loggedUser.shoppingCart.find(\r\n            item2 => item2 === item.id\r\n          )\r\n        );\r\n    }\r\n\r\n    if (\r\n      coursesInShoppingCart.length > 0 &&\r\n      loggedUser\r\n    ) {\r\n      return (\r\n        <>\r\n          <div className=\"shoppingCart_productList\">\r\n            {coursesInShoppingCart.map(\r\n              ({\r\n                authors,\r\n                img,\r\n                price,\r\n                title,\r\n                id,\r\n              }) => (\r\n                <ShoppingCartProduct\r\n                  key={id}\r\n                  id={id}\r\n                  authors={authors}\r\n                  img={img}\r\n                  title={title}\r\n                  price={price}\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              history.push('/transaction_form');\r\n            }}\r\n          >\r\n            Summary and payment\r\n          </button>\r\n        </>\r\n      );\r\n    } else if (\r\n      coursesInShoppingCart.length == 0 &&\r\n      loggedUser\r\n    ) {\r\n      return \" You haven't added any product to your cart yet\";\r\n    } else\r\n      return 'Log in if you want to have access to the product basket';\r\n  };\r\n\r\n  return render();\r\n};\r\n\r\nexport default ShoppingCartPage;\r\n","import React from 'react';\r\n\r\nimport '../styles/HomePage.css';\r\n\r\nimport {\r\n  useSelector,\r\n  useDispatch,\r\n} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { buyCourse } from '../store/actions/userActions';\r\nimport allCoursesList from '../store/allCoursesList';\r\n\r\nconst TransactionFormPage = () => {\r\n  const users = useSelector(store => store.users);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const loggedUser = users.find(\r\n    user => user.logged === true\r\n  );\r\n  let coursesToBuy = null;\r\n  let coursesToBuyId = null;\r\n\r\n  if (loggedUser) {\r\n    coursesToBuy = allCoursesList.filter(course =>\r\n      loggedUser.shoppingCart.find(\r\n        shoppingCartCourseId =>\r\n          shoppingCartCourseId === course.id\r\n      )\r\n    );\r\n    coursesToBuyId = coursesToBuy.map(\r\n      item => item.id\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <span>\r\n          You want to purchase a total of{' '}\r\n          {loggedUser\r\n            ? loggedUser.shoppingCart.length\r\n            : 0}{' '}\r\n          courses\r\n        </span>\r\n      </div>\r\n      <button\r\n        onClick={\r\n          loggedUser\r\n            ? () => {\r\n                dispatch(\r\n                  buyCourse(coursesToBuyId)\r\n                );\r\n                history.push('/user_panel');\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        {' '}\r\n        Purchase and pay\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionFormPage;\r\n","import HomePage from '../pages/HomePage';\r\nimport ProductListPage from '../pages/ProductListPage';\r\nimport LoginPage from '../pages/LoginPage';\r\nimport RegistrationPage from '../pages/RegistrationPage.js';\r\nimport UserPanelPage from '../pages/UserPanelPage';\r\nimport ShoppingCartPage from '../pages/ShoppingCartPage';\r\nimport TransactionFormPage from '../pages/TransactionFormPage';\r\nimport ErrorPage from '../pages/ErrorPage';\r\n\r\nconst list = [\r\n  { name: HomePage, path: '/', exact: true },\r\n  {\r\n    name: ProductListPage,\r\n    path: '/products',\r\n  },\r\n  { name: LoginPage, path: '/login' },\r\n  {\r\n    name: RegistrationPage,\r\n    path: '/registration',\r\n  },\r\n  {\r\n    name: UserPanelPage,\r\n    path: '/user_panel',\r\n  },\r\n  {\r\n    name: ShoppingCartPage,\r\n    path: '/shopping_cart',\r\n  },\r\n  {\r\n    name: TransactionFormPage,\r\n    path: '/transaction_form',\r\n  },\r\n\r\n  { name: ErrorPage },\r\n];\r\n\r\nexport default list;\r\n","import React from 'react';\n\nconst ErrorPage = () => {\n  return <div>Nie ma takiej strony</div>;\n};\n\nexport default ErrorPage;\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport list from '../store/pageList';\r\n\r\nconst Page = () => {\r\n  const pages = list.map(\r\n    ({ path, exact, name }, key) => (\r\n      <Route\r\n        key={key}\r\n        path={path}\r\n        exact={exact}\r\n        component={name}\r\n      />\r\n    )\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page\">\r\n        <Switch>{pages}</Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Navigation.scss';\r\n\r\nconst list = [\r\n  { name: 'Main page', path: '/', exact: true },\r\n  { name: 'Products list', path: '/products' },\r\n  { name: 'User Panel', path: '/user_panel' },\r\n  {\r\n    name: 'Shopping Cart',\r\n    path: '/shopping_cart',\r\n  },\r\n];\r\n\r\nconst menu = list.map(item => (\r\n  <li\r\n    className=\"navigation__item-wraper\"\r\n    key={item.name}\r\n  >\r\n    <NavLink\r\n      className=\"navigation__item\"\r\n      to={item.path}\r\n      exact={item.exact ? item.exact : false}\r\n    >\r\n      {item.name}\r\n    </NavLink>\r\n  </li>\r\n));\r\n\r\nconst Navigation = () => {\r\n  const hamburgerActive = () => {\r\n    const navigation = document.querySelector(\r\n      '.navigation__list'\r\n    );\r\n\r\n    navigation.classList.toggle(\r\n      'navigation__activeBurger'\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navigation\">\r\n        <button\r\n          className=\"navigation__burger\"\r\n          onClick={hamburgerActive}\r\n        >\r\n          <span className=\"fa fa-bars\"></span>\r\n        </button>\r\n        <ul className=\"navigation__list\">\r\n          {menu}\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/LoginPanel.scss';\r\n\r\nimport {\r\n  useDispatch,\r\n  useSelector,\r\n} from 'react-redux';\r\n\r\nimport { changeLoginStatus } from '../store/actions/userActions';\r\nconst list = [\r\n  { name: 'Log in', path: '/login' },\r\n  { name: 'Registration', path: '/registration' },\r\n];\r\n\r\nconst menu = list.map(item => (\r\n  <li\r\n    className=\"panel__item-wraper\"\r\n    key={item.name}\r\n  >\r\n    <NavLink\r\n      className=\"panel__item\"\r\n      to={item.path}\r\n      exact={item.exact ? item.exact : false}\r\n    >\r\n      {item.name}\r\n    </NavLink>\r\n  </li>\r\n));\r\n\r\nconst LoginPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(store => store.users);\r\n\r\n  const userLogged = users.filter(\r\n    ({ logged }) => logged === true\r\n  );\r\n\r\n  return (\r\n    <nav className=\"panel\">\r\n      {userLogged.length > 0 ? (\r\n        <button\r\n          onClick={() => {\r\n            dispatch(\r\n              changeLoginStatus(\r\n                userLogged[0].id,\r\n                false\r\n              )\r\n            );\r\n          }}\r\n        >\r\n          Log out\r\n        </button>\r\n      ) : (\r\n        <ul className=\"panel__list\">{menu}</ul>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default LoginPanel;\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from '../store/store.js';\n\nimport Page from './Page';\nimport Navigation from '../layouts/Navigation';\nimport LoginPanel from './LoginPanel';\n\nimport '../styles/App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"app_wrapper\">\n          <div className=\"menu_wrapper\">\n            <Navigation />\n            <LoginPanel />\n          </div>\n          <Page />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './layouts/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}